#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        Del {
            bindings = <&kp DELETE>;
            key-positions = <29 30>;
        };

        Caret {
            bindings = <&kp CARET>;
            key-positions = <29 47>;
        };

        LPar {
            bindings = <&kp LPAR>;
            key-positions = <29 34>;
        };

        At {
            bindings = <&kp AT>;
            key-positions = <30 47>;
        };

        Esc {
            bindings = <&kp ESCAPE>;
            key-positions = <30 34>;
        };

        End {
            bindings = <&kp END>;
            key-positions = <29 30 47>;
        };

        Home {
            bindings = <&kp HOME>;
            key-positions = <29 30 34>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3    &kp DOLLAR  &kp PERCENT    &kp PAGE_UP    &kp AMPERSAND  &kp LEFT   &kp DOWN   &kp UP   &kp RIGHT  &kp MINUS
&kp TAB    &kp Q   &kp W   &kp F     &kp P       &kp G          &kp PAGE_DOWN  &kp J          &kp L      &kp U      &kp O    &kp Y      &kp LEFT_BRACKET
&kp ENTER  &kp A   &kp R   &kp S     &kp T       &kp D          &kp RC(LEFT)   &kp H          &kp N      &kp E      &kp I    &kp SEMI   &kp INSERT
&kp LSHFT  &kp Z   &kp X   &kp C     &kp V       &kp B          &kp RC(RIGHT)  &kp K          &kp M      &kp COMMA  &kp DOT  &kp F11    &kp F12
&none      &kp F1  &kp F2  &kp LWIN  &kp LALT    &kp F5         &sl 1          &kp F6         &kp SPACE  &sl 2      &kp F9   &kp F10
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        Keyboard {
            bindings = <
&trans  &bt BT_SEL 0    &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans           &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &rgb_ug RGB_TOG  &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans           &trans        &out OUT_USB  &out OUT_BLE    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_CLR_ALL  &trans           &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Nums {
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp N3    &trans                 &trans    &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N4        &kp N5        &kp N6    &kp RIGHT_BRACKET      &trans    &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N7        &kp N8        &kp N9    &kp RIGHT_PARENTHESIS  &trans    &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp ASTERISK  &kp N0        &kp HASH  &caps_word             &trans    &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &kp F3    &kp F4                 &trans    &mkp MB2  &trans  &kp F7  &kp F8  &trans  &trans
            >;
        };
    };
};
